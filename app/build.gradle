plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id "kotlin-parcelize"
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

def getLocalProperties(String key) {
    Properties properties = new Properties()
    File file = project.rootProject.file('local.properties')
    if (file.exists()) {
        properties.load(file.newDataInputStream())
        return properties.getProperty(key)
    } else {
        return ""
    }
}

def getSystemOrLocalProperty(String propertyKey, String defaultLocalPropertyKey = "") {
    return System.getenv(propertyKey) ?: getLocalProperties(defaultLocalPropertyKey == "" ? propertyKey : defaultLocalPropertyKey)
}

android {
    namespace 'com.rm'
    compileSdk 33

    defaultConfig {
        applicationId "com.rm"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // BOM for compose dependencies
    def composeBom = platform('androidx.compose:compose-bom:2023.03.00')
    implementation(composeBom)
    androidTestImplementation(composeBom)

    implementation "com.google.android.material:material:$material_version"
    implementation 'androidx.compose.material3:material3:1.1.0'
    implementation "androidx.compose.ui:ui-tooling-preview"
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
    implementation "androidx.compose.ui:ui"

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation 'androidx.core:core-ktx:1.10.0'

    // HILT
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_compose"

    // NAVIGATION
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // collectAsStateWithLifecycle()
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.1"

    //GSON
    implementation "com.google.code.gson:gson:$gson_version"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
}

configurations.implementation {
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}